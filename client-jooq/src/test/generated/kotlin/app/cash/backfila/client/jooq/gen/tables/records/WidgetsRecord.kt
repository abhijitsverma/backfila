/*
 * This file is generated by jOOQ.
 */
package app.cash.backfila.client.jooq.gen.tables.records

import app.cash.backfila.client.jooq.gen.tables.Widgets
import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.UpdatableRecordImpl

/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class WidgetsRecord() : UpdatableRecordImpl<WidgetsRecord>(Widgets.WIDGETS), Record4<ByteArray?, String?, Long?, String?> {

  var widgetToken: ByteArray?
    set(value) = set(0, value)
    get() = get(0) as ByteArray?

  var manufacturerToken: String?
    set(value) = set(1, value)
    get() = get(1) as String?

  var createdAtMs: Long?
    set(value) = set(2, value)
    get() = get(2) as Long?

  var name: String?
    set(value) = set(3, value)
    get() = get(3) as String?

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  override fun key(): Record1<ByteArray?> = super.key() as Record1<ByteArray?>

  // -------------------------------------------------------------------------
  // Record4 type implementation
  // -------------------------------------------------------------------------

  override fun fieldsRow(): Row4<ByteArray?, String?, Long?, String?> = super.fieldsRow() as Row4<ByteArray?, String?, Long?, String?>
  override fun valuesRow(): Row4<ByteArray?, String?, Long?, String?> = super.valuesRow() as Row4<ByteArray?, String?, Long?, String?>
  override fun field1(): Field<ByteArray?> = Widgets.WIDGETS.WIDGET_TOKEN
  override fun field2(): Field<String?> = Widgets.WIDGETS.MANUFACTURER_TOKEN
  override fun field3(): Field<Long?> = Widgets.WIDGETS.CREATED_AT_MS
  override fun field4(): Field<String?> = Widgets.WIDGETS.NAME
  override fun component1(): ByteArray? = widgetToken
  override fun component2(): String? = manufacturerToken
  override fun component3(): Long? = createdAtMs
  override fun component4(): String? = name
  override fun value1(): ByteArray? = widgetToken
  override fun value2(): String? = manufacturerToken
  override fun value3(): Long? = createdAtMs
  override fun value4(): String? = name

  override fun value1(value: ByteArray?): WidgetsRecord {
    this.widgetToken = value
    return this
  }

  override fun value2(value: String?): WidgetsRecord {
    this.manufacturerToken = value
    return this
  }

  override fun value3(value: Long?): WidgetsRecord {
    this.createdAtMs = value
    return this
  }

  override fun value4(value: String?): WidgetsRecord {
    this.name = value
    return this
  }

  override fun values(value1: ByteArray?, value2: String?, value3: Long?, value4: String?): WidgetsRecord {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    return this
  }

  /**
   * Create a detached, initialised WidgetsRecord
   */
  constructor(widgetToken: ByteArray? = null, manufacturerToken: String? = null, createdAtMs: Long? = null, name: String? = null) : this() {
    this.widgetToken = widgetToken
    this.manufacturerToken = manufacturerToken
    this.createdAtMs = createdAtMs
    this.name = name
  }
}
